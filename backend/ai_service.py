import requests

API_KEY = "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"
MODEL = "mistralai/mistral-7b-instruct"


def is_pc_related(prompt: str) -> bool:
    keywords = [
        "–ø–∫",
        "—Å–±–æ—Ä–∫–∞",
        "–∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ",
        "–≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞",
        "–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä",
        "—Å–æ–±–µ—Ä–∏",
        "–∏–≥—Ä–æ–≤–æ–π",
        "–æ—Ñ–∏—Å–Ω—ã–π",
        "–∂–µ–ª–µ–∑–æ",
        "–∞–ø–≥—Ä–µ–π–¥",
        "ssd",
        "hdd",
        "–º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞",
        "–æ–ø–µ—Ä–∞—Ç–∏–≤–∫–∞",
        "–±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è",
        "–±—é–¥–∂–µ—Ç",
    ]
    prompt_lower = prompt.lower()
    return any(word in prompt_lower for word in keywords)


def ask_openrouter(prompt: str) -> str:
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "http://localhost",
        "X-Title": "PC Config Assistant",
    }
    payload = {"model": MODEL, "messages": [{"role": "user", "content": prompt}]}

    response = requests.post(url, json=payload, headers=headers, timeout=30)

    if response.status_code == 200:
        return response.json()["choices"][0]["message"]["content"].strip()
    else:
        return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò."


def handle_ai_request(prompt: str) -> str:
    if is_pc_related(prompt):
        return ask_openrouter(prompt)
    else:
        return "üí° –Ø –ø–æ–º–æ–≥–∞—é —Ç–æ–ª—å–∫–æ —Å –≤—ã–±–æ—Ä–æ–º –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö –∏ —Å–±–æ—Ä–∫–æ–π –ü–ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–Ω–∞—á–µ."
