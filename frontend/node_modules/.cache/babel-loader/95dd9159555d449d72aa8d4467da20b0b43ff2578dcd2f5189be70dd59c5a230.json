{"ast":null,"code":"var _jsxFileName = \"C:\\\\pc_config\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport BuildCard from './components/BuildCard';\nimport PartCard from './components/PartCard';\nimport FilterPanel from './components/FilterPanel';\nimport { sampleBuilds } from './data/sampleBuilds';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [filters, setFilters] = useState({\n    category: '',\n    priceMin: '',\n    priceMax: '',\n    sortBy: 'name'\n  });\n\n  // Mock API call function\n  const fetchParts = async query => {\n    // In a real app, this would be a fetch to your backend\n    console.log(`Fetching parts for query: ${query}`);\n\n    // Mock data - in a real app, this would come from the backend\n    const mockParts = [{\n      id: 1,\n      name: 'Intel Core i9-13900K',\n      category: 'CPU',\n      price: 589.99,\n      rating: 4.8\n    }, {\n      id: 2,\n      name: 'AMD Ryzen 9 7950X',\n      category: 'CPU',\n      price: 699.99,\n      rating: 4.9\n    }, {\n      id: 3,\n      name: 'NVIDIA RTX 4090',\n      category: 'GPU',\n      price: 1599.99,\n      rating: 4.7\n    }, {\n      id: 4,\n      name: 'AMD RX 7900 XTX',\n      category: 'GPU',\n      price: 999.99,\n      rating: 4.6\n    }, {\n      id: 5,\n      name: 'Corsair Vengeance 32GB DDR5',\n      category: 'RAM',\n      price: 129.99,\n      rating: 4.5\n    }, {\n      id: 6,\n      name: 'Samsung 980 Pro 1TB',\n      category: 'Storage',\n      price: 99.99,\n      rating: 4.8\n    }];\n\n    // Filter by search query\n    const filtered = mockParts.filter(part => part.name.toLowerCase().includes(query.toLowerCase()) || part.category.toLowerCase().includes(query.toLowerCase()));\n    return filtered;\n  };\n\n  // Handle search\n  const handleSearch = async query => {\n    if (query.trim() === '') {\n      setSearchResults([]);\n      setIsSearching(false);\n      return;\n    }\n    setIsSearching(true);\n    const results = await fetchParts(query);\n    setSearchResults(results);\n  };\n\n  // Apply filters and sorting\n  const applyFiltersAndSort = items => {\n    let filtered = [...items];\n\n    // Apply category filter\n    if (filters.category) {\n      filtered = filtered.filter(item => item.category === filters.category);\n    }\n\n    // Apply price filters\n    if (filters.priceMin) {\n      filtered = filtered.filter(item => item.price >= Number(filters.priceMin));\n    }\n    if (filters.priceMax) {\n      filtered = filtered.filter(item => item.price <= Number(filters.priceMax));\n    }\n\n    // Apply sorting\n    switch (filters.sortBy) {\n      case 'price-asc':\n        filtered.sort((a, b) => a.price - b.price);\n        break;\n      case 'price-desc':\n        filtered.sort((a, b) => b.price - a.price);\n        break;\n      case 'rating':\n        filtered.sort((a, b) => b.rating - a.rating);\n        break;\n      default:\n        // name\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n    }\n    return filtered;\n  };\n  useEffect(() => {\n    if (searchQuery) {\n      handleSearch(searchQuery);\n    }\n  }, [searchQuery]);\n  const filteredResults = applyFiltersAndSort(searchResults);\n  const popularBuilds = sampleBuilds;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: setSearchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), isSearching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [/*#__PURE__*/_jsxDEV(FilterPanel, {\n          filters: filters,\n          onFilterChange: setFilters,\n          availableCategories: [...new Set(searchResults.map(part => part.category))]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parts-grid\",\n          children: filteredResults.length > 0 ? filteredResults.map(part => /*#__PURE__*/_jsxDEV(PartCard, {\n            part: part\n          }, part.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-results\",\n            children: \"No parts found matching your search.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popular-builds\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Popular PC Builds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"builds-grid\",\n          children: popularBuilds.map(build => /*#__PURE__*/_jsxDEV(BuildCard, {\n            build: build\n          }, build.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lDOQSkbbEvQNl8k/oU+2hFJi38I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","SearchBar","BuildCard","PartCard","FilterPanel","sampleBuilds","jsxDEV","_jsxDEV","App","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","filters","setFilters","category","priceMin","priceMax","sortBy","fetchParts","query","console","log","mockParts","id","name","price","rating","filtered","filter","part","toLowerCase","includes","handleSearch","trim","results","applyFiltersAndSort","items","item","Number","sort","a","b","localeCompare","filteredResults","popularBuilds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onFilterChange","availableCategories","Set","map","length","build","_c","$RefreshReg$"],"sources":["C:/pc_config/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport BuildCard from './components/BuildCard';\nimport PartCard from './components/PartCard';\nimport FilterPanel from './components/FilterPanel';\nimport { sampleBuilds } from './data/sampleBuilds';\nimport './App.css';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [filters, setFilters] = useState({\n    category: '',\n    priceMin: '',\n    priceMax: '',\n    sortBy: 'name'\n  });\n\n  // Mock API call function\n  const fetchParts = async (query) => {\n    // In a real app, this would be a fetch to your backend\n    console.log(`Fetching parts for query: ${query}`);\n    \n    // Mock data - in a real app, this would come from the backend\n    const mockParts = [\n      { id: 1, name: 'Intel Core i9-13900K', category: 'CPU', price: 589.99, rating: 4.8 },\n      { id: 2, name: 'AMD Ryzen 9 7950X', category: 'CPU', price: 699.99, rating: 4.9 },\n      { id: 3, name: 'NVIDIA RTX 4090', category: 'GPU', price: 1599.99, rating: 4.7 },\n      { id: 4, name: 'AMD RX 7900 XTX', category: 'GPU', price: 999.99, rating: 4.6 },\n      { id: 5, name: 'Corsair Vengeance 32GB DDR5', category: 'RAM', price: 129.99, rating: 4.5 },\n      { id: 6, name: 'Samsung 980 Pro 1TB', category: 'Storage', price: 99.99, rating: 4.8 },\n    ];\n    \n    // Filter by search query\n    const filtered = mockParts.filter(part => \n      part.name.toLowerCase().includes(query.toLowerCase()) ||\n      part.category.toLowerCase().includes(query.toLowerCase())\n    );\n    \n    return filtered;\n  };\n\n  // Handle search\n  const handleSearch = async (query) => {\n    if (query.trim() === '') {\n      setSearchResults([]);\n      setIsSearching(false);\n      return;\n    }\n    \n    setIsSearching(true);\n    const results = await fetchParts(query);\n    setSearchResults(results);\n  };\n\n  // Apply filters and sorting\n  const applyFiltersAndSort = (items) => {\n    let filtered = [...items];\n    \n    // Apply category filter\n    if (filters.category) {\n      filtered = filtered.filter(item => item.category === filters.category);\n    }\n    \n    // Apply price filters\n    if (filters.priceMin) {\n      filtered = filtered.filter(item => item.price >= Number(filters.priceMin));\n    }\n    \n    if (filters.priceMax) {\n      filtered = filtered.filter(item => item.price <= Number(filters.priceMax));\n    }\n    \n    // Apply sorting\n    switch (filters.sortBy) {\n      case 'price-asc':\n        filtered.sort((a, b) => a.price - b.price);\n        break;\n      case 'price-desc':\n        filtered.sort((a, b) => b.price - a.price);\n        break;\n      case 'rating':\n        filtered.sort((a, b) => b.rating - a.rating);\n        break;\n      default: // name\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n    }\n    \n    return filtered;\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      handleSearch(searchQuery);\n    }\n  }, [searchQuery]);\n\n  const filteredResults = applyFiltersAndSort(searchResults);\n  const popularBuilds = sampleBuilds;\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <main className=\"main-content\">\n        <SearchBar onSearch={setSearchQuery} />\n        \n        {isSearching ? (\n          <div className=\"search-results\">\n            <FilterPanel \n              filters={filters} \n              onFilterChange={setFilters} \n              availableCategories={[...new Set(searchResults.map(part => part.category))]}\n            />\n            <div className=\"parts-grid\">\n              {filteredResults.length > 0 ? (\n                filteredResults.map(part => (\n                  <PartCard key={part.id} part={part} />\n                ))\n              ) : (\n                <p className=\"no-results\">No parts found matching your search.</p>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"popular-builds\">\n            <h2>Popular PC Builds</h2>\n            <div className=\"builds-grid\">\n              {popularBuilds.map(build => (\n                <BuildCard key={build.id} build={build} />\n              ))}\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC;IACrCoB,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC;IACAC,OAAO,CAACC,GAAG,CAAC,6BAA6BF,KAAK,EAAE,CAAC;;IAEjD;IACA,MAAMG,SAAS,GAAG,CAChB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,sBAAsB;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EACpF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,mBAAmB;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EACjF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,iBAAiB;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAI,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,iBAAiB;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EAC/E;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,6BAA6B;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EAC3F;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,qBAAqB;MAAEV,QAAQ,EAAE,SAAS;MAAEW,KAAK,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAI,CAAC,CACvF;;IAED;IACA,MAAMC,QAAQ,GAAGL,SAAS,CAACM,MAAM,CAACC,IAAI,IACpCA,IAAI,CAACL,IAAI,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,KAAK,CAACW,WAAW,CAAC,CAAC,CAAC,IACrDD,IAAI,CAACf,QAAQ,CAACgB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,KAAK,CAACW,WAAW,CAAC,CAAC,CAC1D,CAAC;IAED,OAAOH,QAAQ;EACjB,CAAC;;EAED;EACA,MAAMK,YAAY,GAAG,MAAOb,KAAK,IAAK;IACpC,IAAIA,KAAK,CAACc,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBxB,gBAAgB,CAAC,EAAE,CAAC;MACpBE,cAAc,CAAC,KAAK,CAAC;MACrB;IACF;IAEAA,cAAc,CAAC,IAAI,CAAC;IACpB,MAAMuB,OAAO,GAAG,MAAMhB,UAAU,CAACC,KAAK,CAAC;IACvCV,gBAAgB,CAACyB,OAAO,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IACrC,IAAIT,QAAQ,GAAG,CAAC,GAAGS,KAAK,CAAC;;IAEzB;IACA,IAAIxB,OAAO,CAACE,QAAQ,EAAE;MACpBa,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACS,IAAI,IAAIA,IAAI,CAACvB,QAAQ,KAAKF,OAAO,CAACE,QAAQ,CAAC;IACxE;;IAEA;IACA,IAAIF,OAAO,CAACG,QAAQ,EAAE;MACpBY,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACS,IAAI,IAAIA,IAAI,CAACZ,KAAK,IAAIa,MAAM,CAAC1B,OAAO,CAACG,QAAQ,CAAC,CAAC;IAC5E;IAEA,IAAIH,OAAO,CAACI,QAAQ,EAAE;MACpBW,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACS,IAAI,IAAIA,IAAI,CAACZ,KAAK,IAAIa,MAAM,CAAC1B,OAAO,CAACI,QAAQ,CAAC,CAAC;IAC5E;;IAEA;IACA,QAAQJ,OAAO,CAACK,MAAM;MACpB,KAAK,WAAW;QACdU,QAAQ,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACf,KAAK,GAAGgB,CAAC,CAAChB,KAAK,CAAC;QAC1C;MACF,KAAK,YAAY;QACfE,QAAQ,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAChB,KAAK,GAAGe,CAAC,CAACf,KAAK,CAAC;QAC1C;MACF,KAAK,QAAQ;QACXE,QAAQ,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACf,MAAM,GAAGc,CAAC,CAACd,MAAM,CAAC;QAC5C;MACF;QAAS;QACPC,QAAQ,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAChB,IAAI,CAACkB,aAAa,CAACD,CAAC,CAACjB,IAAI,CAAC,CAAC;IACzD;IAEA,OAAOG,QAAQ;EACjB,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,EAAE;MACf0B,YAAY,CAAC1B,WAAW,CAAC;IAC3B;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMqC,eAAe,GAAGR,mBAAmB,CAAC3B,aAAa,CAAC;EAC1D,MAAMoC,aAAa,GAAG3C,YAAY;EAElC,oBACEE,OAAA;IAAK0C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3C,OAAA,CAACP,MAAM;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV/C,OAAA;MAAM0C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC5B3C,OAAA,CAACN,SAAS;QAACsD,QAAQ,EAAE5C;MAAe;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEtCxC,WAAW,gBACVP,OAAA;QAAK0C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B3C,OAAA,CAACH,WAAW;UACVY,OAAO,EAAEA,OAAQ;UACjBwC,cAAc,EAAEvC,UAAW;UAC3BwC,mBAAmB,EAAE,CAAC,GAAG,IAAIC,GAAG,CAAC9C,aAAa,CAAC+C,GAAG,CAAC1B,IAAI,IAAIA,IAAI,CAACf,QAAQ,CAAC,CAAC;QAAE;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eACF/C,OAAA;UAAK0C,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBH,eAAe,CAACa,MAAM,GAAG,CAAC,GACzBb,eAAe,CAACY,GAAG,CAAC1B,IAAI,iBACtB1B,OAAA,CAACJ,QAAQ;YAAe8B,IAAI,EAAEA;UAAK,GAApBA,IAAI,CAACN,EAAE;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CACtC,CAAC,gBAEF/C,OAAA;YAAG0C,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAoC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAClE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAEN/C,OAAA;QAAK0C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B3C,OAAA;UAAA2C,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B/C,OAAA;UAAK0C,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzBF,aAAa,CAACW,GAAG,CAACE,KAAK,iBACtBtD,OAAA,CAACL,SAAS;YAAgB2D,KAAK,EAAEA;UAAM,GAAvBA,KAAK,CAAClC,EAAE;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiB,CAC1C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC7C,EAAA,CAjIQD,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AAmIZ,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}