{"ast":null,"code":"var _jsxFileName = \"C:\\\\pc_config\\\\frontend\\\\src\\\\pages\\\\SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport PartCard from '../components/PartCard';\nimport FilterPanel from '../components/FilterPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [filters, setFilters] = useState({\n    category: '',\n    priceMin: '',\n    priceMax: '',\n    sortBy: 'name'\n  });\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.searchQuery) {\n      setSearchQuery(location.state.searchQuery);\n      fetchResults(location.state.searchQuery);\n    }\n  }, [location]);\n  const fetchResults = async query => {\n    // Моковые данные - в реальном приложении будет запрос к API\n    const mockParts = [{\n      id: 1,\n      name: 'Intel Core i9-13900K',\n      category: 'CPU',\n      price: 589.99,\n      rating: 4.8\n    }, {\n      id: 2,\n      name: 'AMD Ryzen 9 7950X',\n      category: 'CPU',\n      price: 699.99,\n      rating: 4.9\n    }, {\n      id: 3,\n      name: 'NVIDIA RTX 4090',\n      category: 'GPU',\n      price: 1599.99,\n      rating: 4.7\n    }, {\n      id: 4,\n      name: 'AMD RX 7900 XTX',\n      category: 'GPU',\n      price: 999.99,\n      rating: 4.6\n    }];\n    const filtered = mockParts.filter(part => part.name.toLowerCase().includes(query.toLowerCase()) || part.category.toLowerCase().includes(query.toLowerCase()));\n    setResults(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Search Results for \\\"\", searchQuery, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterPanel, {\n      filters: filters,\n      onFilterChange: setFilters,\n      availableCategories: [...new Set(results.map(part => part.category))]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parts-grid\",\n      children: results.map(part => /*#__PURE__*/_jsxDEV(PartCard, {\n        part: part\n      }, part.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"9jsVGXbE7UEp3p9eOskKiwaBMFo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","PartCard","FilterPanel","jsxDEV","_jsxDEV","SearchPage","_s","location","navigate","searchQuery","setSearchQuery","results","setResults","filters","setFilters","category","priceMin","priceMax","sortBy","_location$state","state","fetchResults","query","mockParts","id","name","price","rating","filtered","filter","part","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","availableCategories","Set","map","_c","$RefreshReg$"],"sources":["C:/pc_config/frontend/src/pages/SearchPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport PartCard from '../components/PartCard';\r\nimport FilterPanel from '../components/FilterPanel';\r\n\r\nconst SearchPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    category: '',\r\n    priceMin: '',\r\n    priceMax: '',\r\n    sortBy: 'name'\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (location.state?.searchQuery) {\r\n      setSearchQuery(location.state.searchQuery);\r\n      fetchResults(location.state.searchQuery);\r\n    }\r\n  }, [location]);\r\n\r\n  const fetchResults = async (query) => {\r\n    // Моковые данные - в реальном приложении будет запрос к API\r\n    const mockParts = [\r\n      { id: 1, name: 'Intel Core i9-13900K', category: 'CPU', price: 589.99, rating: 4.8 },\r\n      { id: 2, name: 'AMD Ryzen 9 7950X', category: 'CPU', price: 699.99, rating: 4.9 },\r\n      { id: 3, name: 'NVIDIA RTX 4090', category: 'GPU', price: 1599.99, rating: 4.7 },\r\n      { id: 4, name: 'AMD RX 7900 XTX', category: 'GPU', price: 999.99, rating: 4.6 },\r\n    ];\r\n    \r\n    const filtered = mockParts.filter(part => \r\n      part.name.toLowerCase().includes(query.toLowerCase()) ||\r\n      part.category.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    \r\n    setResults(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h1>Search Results for \"{searchQuery}\"</h1>\r\n      <FilterPanel \r\n        filters={filters}\r\n        onFilterChange={setFilters}\r\n        availableCategories={[...new Set(results.map(part => part.category))]}\r\n      />\r\n      <div className=\"parts-grid\">\r\n        {results.map(part => (\r\n          <PartCard key={part.id} part={part} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC;IACrCkB,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IAAA,IAAAqB,eAAA;IACd,KAAAA,eAAA,GAAIZ,QAAQ,CAACa,KAAK,cAAAD,eAAA,eAAdA,eAAA,CAAgBV,WAAW,EAAE;MAC/BC,cAAc,CAACH,QAAQ,CAACa,KAAK,CAACX,WAAW,CAAC;MAC1CY,YAAY,CAACd,QAAQ,CAACa,KAAK,CAACX,WAAW,CAAC;IAC1C;EACF,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC;IACA,MAAMC,SAAS,GAAG,CAChB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,sBAAsB;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EACpF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,mBAAmB;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EACjF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,iBAAiB;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAI,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,iBAAiB;MAAEV,QAAQ,EAAE,KAAK;MAAEW,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,CAChF;IAED,MAAMC,QAAQ,GAAGL,SAAS,CAACM,MAAM,CAACC,IAAI,IACpCA,IAAI,CAACL,IAAI,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,KAAK,CAACS,WAAW,CAAC,CAAC,CAAC,IACrDD,IAAI,CAACf,QAAQ,CAACgB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,KAAK,CAACS,WAAW,CAAC,CAAC,CAC1D,CAAC;IAEDnB,UAAU,CAACgB,QAAQ,CAAC;EACtB,CAAC;EAED,oBACExB,OAAA;IAAK6B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB9B,OAAA;MAAA8B,QAAA,GAAI,uBAAoB,EAACzB,WAAW,EAAC,IAAC;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3ClC,OAAA,CAACF,WAAW;MACVW,OAAO,EAAEA,OAAQ;MACjB0B,cAAc,EAAEzB,UAAW;MAC3B0B,mBAAmB,EAAE,CAAC,GAAG,IAAIC,GAAG,CAAC9B,OAAO,CAAC+B,GAAG,CAACZ,IAAI,IAAIA,IAAI,CAACf,QAAQ,CAAC,CAAC;IAAE;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACFlC,OAAA;MAAK6B,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBvB,OAAO,CAAC+B,GAAG,CAACZ,IAAI,iBACf1B,OAAA,CAACH,QAAQ;QAAe6B,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACN,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CAnDID,UAAU;EAAA,QACGN,WAAW,EACXC,WAAW;AAAA;AAAA2C,EAAA,GAFxBtC,UAAU;AAqDhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}